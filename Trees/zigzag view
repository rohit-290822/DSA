/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> a= new ArrayList<List<Integer>>();
         if(root==null)
            return a;
        Queue<TreeNode> c = new LinkedList<>();          
        c.add(root);
        boolean r=true;
        while(c.size()!=0)
        {   LinkedList<Integer> b = new LinkedList<>();
            int size=c.size();
         for(int i=0;i<size;i++)
         {   
        if(r==true)
         {
             TreeNode n=c.remove();
             b.addLast(n.val);
             if(n.left!=null) c.add(n.left);
             if(n.right!=null) c.add(n.right);
         }
             else 
             { 
                  TreeNode m=c.remove();
             b.addFirst(m.val);
             if(m.left!=null) c.add(m.left);
             if(m.right!=null) c.add(m.right);
                 
             }
          
             
         }
         r=!r;
         List<Integer> q = new ArrayList<>(b);
         a.add(q);
            
        }
        return a;
        
    }
}
